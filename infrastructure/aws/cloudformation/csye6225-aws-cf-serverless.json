{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Parameters":{
      "S3BUCKETLAMBDA":{
         "Description":"S3 bucket for lambda artifact",
         "Type":"String"
      },
      "DOMAINIDNAME":{
         "Description":"S3 bucket for lambda artifact",
         "Type":"String"
      }
   },
   "Resources":{
      "LambdaExecutionRole":{
         "Type":"AWS::IAM::Role",
         "Properties":{
            "AssumeRolePolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Principal":{
                        "Service":"lambda.amazonaws.com"
                     },
                     "Action":"sts:AssumeRole"
                  }
               ]
            },
            "RoleName":"LambdaExecutionRole"
         }
      },
      "LambdaDynamoDBPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"LambdaDynamoDBPolicy",
            "PolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Action":[
                        "dynamodb:BatchGetItem",
                        "dynamodb:GetItem",
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "dynamodb:BatchWriteItem",
                        "dynamodb:PutItem",
                        "dynamodb:UpdateItem"
                     ],
                     "Resource":{
                        "Fn::ImportValue":"DynamoDBTableARN"
                     }
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"LambdaExecutionRole"
               }
            ]
         }
      },
      "LambdaLogsPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"LambdaLogsPolicy",
            "PolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Action":[
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:PutLogEvents"
                     ],
                     "Resource":"arn:aws:logs:${AWS::Region}:${AWS:AccountId}:*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"LambdaExecutionRole"
               }
            ]
         }
      },
      "LambdaSESPolicy":{
         "Type":"AWS::IAM::Policy",
         "Properties":{
            "PolicyName":"LambdaSESPolicy",
            "PolicyDocument":{
               "Version":"2012-10-17",
               "Statement":[
                  {
                     "Effect":"Allow",
                     "Action":[
                        "ses:SendEmail",
                        "ses:SendRawEmail"
                     ],
                     "Resource":"*"
                  }
               ]
            },
            "Roles":[
               {
                  "Ref":"LambdaExecutionRole"
               }
            ]
         }
      },
      "PasswordResetLambdaFunction":{
         "Type":"AWS::Lambda::Function",
         "Properties":{
            "Handler":"password_reset.password_reset",
            "Role":{
               "Fn::GetAtt":[
                  "LambdaExecutionRole",
                  "Arn"
               ]
            },
            "Code":{
               "S3Bucket":{
                  "Ref":"S3BUCKETLAMBDA"
               },
               "S3Key":"cloud-ninja-lambda.zip"
            },
            "Runtime":"python3.7",
            "FunctionName":"password_reset",
            "Environment":{
               "Variables":{
                  "DOMAIN_NAME":{
                     "Ref":"DOMAINIDNAME"
                  },
                  "DYNAMO_TABLE":"csye6225"
               }
            }
         }
      },
      "LambdaResourcePolicy":{
         "Type":"AWS::Lambda::Permission",
         "Properties":{
            "FunctionName":{
               "Ref":"PasswordResetLambdaFunction"
            },
            "Principal":"sns.amazonaws.com",
            "Action":"lambda:InvokeFunction",
            "SourceArn":{
               "Fn::ImportValue":"PasswordResetTopicARN"
            }
         }
      },
      "LambdaSNSSubscription":{
         "Type":"AWS::SNS::Subscription",
         "DependsOn":[
            "PasswordResetLambdaFunction"
         ],
         "Properties":{
            "Endpoint":{
               "Fn::GetAtt":[
                  "PasswordResetLambdaFunction",
                  "Arn"
               ]
            },
            "Protocol":"lambda",
            "TopicArn":{
               "Fn::ImportValue":"PasswordResetTopicARN"
            }
         }
      }
   }
}
